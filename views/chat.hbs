<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">
    <title>Chat</title>
</head>
<body>
    <div class="chat-container">
        <h2>Available Users</h2>
        <input type="text" id="userSearch" placeholder="Search users...">
        <ul id="userList">
            {{#each users}}
                <li data-user-id="{{this._id}}">{{this.name}}</li>
            {{/each}}
        </ul>

        <h2>Chat</h2>
        <div id="chatMessages">
            <!-- Chat messages will be displayed here -->
        </div>
        <input type="text" id="messageInput" placeholder="Type a message...">
        <button id="sendMessage">Send</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Function to load messages
        const loadMessages = (recipientId) => {
            // Fetch messages for the selected user
            fetch(`/api/messages/${recipientId}`)
                .then(response => response.json())
                .then(data => {
                    const chatMessages = document.getElementById('chatMessages');
                    chatMessages.innerHTML = ''; // Clear existing messages
                    data.messages.forEach(message => {
                        const messageElement = document.createElement('div');
                        messageElement.textContent = `${message.senderId}: ${message.content}`;
                        chatMessages.appendChild(messageElement);
                    });
                });
        };

        // User selection event
        document.getElementById('userList').addEventListener('click', (event) => {
            const userId = event.target.dataset.userId;
            if (userId) {
                loadMessages(userId);
            }
        });

        // Sending a message
        document.getElementById('sendMessage').addEventListener('click', async () => {
            const messageInput = document.getElementById('messageInput');
            const recipientId = /* Get selected user's ID */;
            const content = messageInput.value;

            await fetch('/api/messages/send', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ recipientId, content })
            });

            messageInput.value = ''; // Clear the input after sending
        });

        // Listen for incoming messages
        socket.on('chatMessage', (message) => {
            const chatMessages = document.getElementById('chatMessages');
            const messageElement = document.createElement('div');
            messageElement.textContent = `${message.senderId}: ${message.content}`;
            chatMessages.appendChild(messageElement);
        });
    </script>
</body>
</html>
